{"version":3,"sources":["assets/earth.jpg","pictures.js","assets/mercury.png","assets/venus.jpg","assets/mars.jpg","assets/jupiter.jpg","assets/saturn.jpg","assets/uranus.jpg","assets/neptune.jpg","planet_view.js","App.js","reportWebVitals.js","index.js"],"names":["my_images","earth","Planet","props","planet","planets","name","console","log","document","getElementsByClassName","classList","add","prevPlanet","remove","className","alt","src","toLowerCase","type","distance","year","day","radius","description","toUpperCase","href","planet_data","require","App","useState","setPlanet","prevPlanetRef","value","ref","useRef","useEffect","current","usePrevious","key","nav_link","Object","keys","map","item","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"umOAAe,G,MAAA,IAA0B,mCCqB1BA,EAXG,CACd,QCXW,IAA0B,oCDYrC,MEZW,IAA0B,kCFarC,MAASC,EACT,KGdW,IAA0B,iCHerC,QIfW,IAA0B,oCJgBrC,OKhBW,IAA0B,mCLiBrC,OMjBW,IAA0B,mCNkBrC,QOlBW,IAA0B,qC,OCwC1BC,MApCf,SAAgBC,GACZ,IAAMC,EAASD,EAAME,QAAQF,EAAMG,MAOnC,OALAC,QAAQC,IAAIJ,GACZK,SAASC,uBAAuBP,EAAMG,MAAM,GAAGK,UAAUC,IAAI,aACrC,KAArBT,EAAMU,YACLJ,SAASC,uBAAuBP,EAAMU,YAAY,GAAGF,UAAUG,OAAO,aAG1E,sBAAKC,UAAU,mBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,qBAAaC,IAAI,SAASC,IAAKjB,EAAUG,EAAMG,KAAKY,gBAA1C,GACV,qBAAKH,UAAU,cAAf,SACI,+BACI,yCAAYX,EAAOe,KAAnB,OACA,6CAAgBf,EAAOgB,SAAvB,OACA,qDAAwBhB,EAAOiB,KAA/B,OACA,oDAAuBjB,EAAOkB,IAA9B,OACA,2CAAclB,EAAOmB,OAArB,UACA,mDAAsBnB,EAAO,kBAA7B,eAIZ,qBAAKW,UAAU,qBAAf,SACI,4BAAIX,EAAOoB,gBAEf,sBAAKT,UAAU,YAAf,8BACsBZ,EAAMG,KAAKmB,cAC7B,mBAAGC,KAAMtB,EAAO,aAAhB,4BC7BNuB,EAAcC,EAAQ,IAqCbC,MAzBf,WAAgB,IAAD,EAEeC,mBAAS,IAFxB,mBAEN1B,EAFM,KAEE2B,EAFF,KAGPC,EAZR,SAAqBC,GACnB,IAAMC,EAAMC,mBAKZ,OAJAC,qBAAU,WACNF,EAAIG,QAAUJ,IACf,CAACA,IAEGC,EAAIG,QAMWC,CAAYlC,GAClCG,QAAQC,IAAIwB,GAEZ,IAAIO,EAAM,EACJC,EAAWC,OAAOC,KAAKf,GAAagB,KAAI,SAACC,GAC7C,OAAO,oBAAgB7B,UAAU,eAA1B,SACH,mBAAGA,UAAW6B,EAAMC,QAAS,kBAAId,EAAUa,IAA3C,SAAmDA,EAAKnB,iBAD5Cc,QAKlB,OACE,sBAAKxB,UAAU,MAAf,UACE,oBAAIA,UAAU,MAAd,SAAqByB,IAET,KAAXpC,GACC,cAAC,EAAD,CAAQE,KAAMF,EAAQC,QAASsB,EAAad,WAAYmB,QCrBjDc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFhD,SAASiD,eAAe,SAM1BZ,M","file":"static/js/main.4f2805ba.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/earth.27c837f9.jpg\";","\nimport mercury from \"./assets/mercury.png\";\nimport venus from \"./assets/venus.jpg\";\nimport earth from \"./assets/earth.jpg\";\nimport mars from \"./assets/mars.jpg\";\nimport jupiter from \"./assets/jupiter.jpg\";\nimport saturn from \"./assets/saturn.jpg\";\nimport uranus from \"./assets/uranus.jpg\";\nimport neptune from \"./assets/neptune.jpg\";\n\nconst my_images = {\n    'mercury': mercury,\n    'venus': venus,\n    'earth': earth,\n    'mars' : mars,\n    'jupiter': jupiter,\n    'saturn': saturn,\n    'uranus': uranus,\n    'neptune': neptune\n};\n\nexport default my_images;","export default __webpack_public_path__ + \"static/media/mercury.77316c95.png\";","export default __webpack_public_path__ + \"static/media/venus.2bd76e7d.jpg\";","export default __webpack_public_path__ + \"static/media/mars.cc255a7d.jpg\";","export default __webpack_public_path__ + \"static/media/jupiter.69c8f961.jpg\";","export default __webpack_public_path__ + \"static/media/saturn.89d03974.jpg\";","export default __webpack_public_path__ + \"static/media/uranus.0b53589e.jpg\";","export default __webpack_public_path__ + \"static/media/neptune.4f987074.jpg\";","import { useEffect } from \"react\";\nimport earth from \"./assets/earth.jpg\";\nimport {default as my_images} from \"./pictures\";\n\nfunction Planet(props){\n    const planet = props.planets[props.name];\n\n    console.log(planet);\n    document.getElementsByClassName(props.name)[0].classList.add(\"add_color\");\n    if(props.prevPlanet !== \"\") \n        document.getElementsByClassName(props.prevPlanet)[0].classList.remove(\"add_color\");\n    \n    return( \n    <div className=\"planet_component\"> \n        <div className=\"planet_div\">\n            <img key={0} alt=\"planet\" src={my_images[props.name.toLowerCase()]}></img>\n            <div className=\"quick_facts\">\n                <ul>\n                    <li> TYPE: {planet.type} </li> \n                    <li> DISTANCE: {planet.distance} </li>\n                    <li> Earth Days/ Year: {planet.year} </li>\n                    <li> Earth Days/ Day: {planet.day} </li>\n                    <li> Radius: {planet.radius} km </li>\n                    <li> Orbit Velocity: {planet['orbit velocity']} </li>\n                </ul>\n            </div>\n        </div>\n        <div className=\"planet_description\">\n            <p>{planet.description}</p>\n        </div>\n        <div className=\"more_info\">\n            Learn More About {props.name.toUpperCase()}\n            <a href={planet[\"nasa link\"]}> here. </a>\n        </div>\n    </div>\n    );\n\n}\n\n\nexport default Planet;","import './App.css';\nimport {default as Planet} from './planet_view.js';\nimport React, {useState, useEffect, useRef} from 'react';\nconst planet_data = require(\"./planets_info.json\");\n\n\nfunction usePrevious(value){\n  const ref = useRef();\n  useEffect(()=>{\n      ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nfunction App() {\n  \n  const [planet, setPlanet] = useState(\"\");\n  const prevPlanetRef = usePrevious(planet);\n  console.log(prevPlanetRef);\n\n  var key = 0;\n  const nav_link = Object.keys(planet_data).map((item)=>{\n    return <li key={key++} className=\"planets_link\">\n        <a className={item} onClick={()=>setPlanet(item)}>{item.toUpperCase()}</a>\n      </li>\n  });\n\n  return (\n    <div className=\"App\">\n      <ul className=\"nav\">{nav_link}</ul>\n      \n      {planet !== \"\" &&\n        <Planet name={planet} planets={planet_data} prevPlanet={prevPlanetRef} />\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}